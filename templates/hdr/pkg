
{% set pkg=target_pkg %}
// Autogenerated from {{ pkg.source_file }} by yis (https://github.com/Lightelligence/yis)
//
// Do Not Edit
//
#ifndef __{{ pkg.name | upper }}_YIS_H__
#define __{{ pkg.name | upper }}_YIS_H__

#include <stdint.h>


{% for p in pkg.localparams.values() %}
#define {{p.name}} {{p.value.computed_value}}           // {{p.doc_summary}}
{% endfor %}


{% for e in pkg.enums.values() %}
// {{e.doc_summary}}
typedef enum {
{% set vals = e.children.values() %}
{% for v in vals %}
{% if v.sv_value is number %}
    {{v.name}} = {{v.sv_value}},   // {{v.doc_summary }}
{% else %}
    {{v.name}},                    // {{ v.doc_summary }}
{% endif %}
{% endfor %}
} {{e.name}};

{% endfor %}

{% for t in pkg.typedefs.values() %}
// {{t.doc_summary}}
typedef {{t.render_native_c_type() }} {{t.name}};    // {{t.computed_width}} bits wide

{% endfor %}

{% for o in orderedElements %}
// {{o.doc_summary}}
{% if o is struct %}
typedef struct _{{o.name}} {
{% elif o is union %}
typedef union _{{o.name}} {
{% endif %}
{% for f in o.children.values() %}
    {{f.render_native_c_type() }} {{f.name}};    // {{f.computed_width}} bits : {{f.doc_summary }}
{% endfor %}
} {{o.name}};

{% endfor %}

{% for m in addressMacros %}
{{ m }}
{% endfor %}

#endif // __{{ pkg.name | upper }}_YIS_H__
