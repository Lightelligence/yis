# -*- yaml -*-
---
doc_summary: This is an example of what a package file could look like.
localparams:
  - name: TRIPLE_NESTED_PARAM
    width: DOUBLE_LINK_PARAM.value
    value: ANOTHER_PARAM.value
    doc_summary: This parameter has a paramterized width and a parameterized type.

  - name: DOUBLE_LINK_PARAM
    width: HERO_WIDTH.width
    value: ANOTHER_PARAM.value
    doc_summary: This parameter has a paramterized width and a parameterized type.

  - name: HERO_WIDTH
    value: 36
    sv_render_no_width: True
    doc_summary: Width of hero bus around the bag.

  - name: ANOTHER_PARAM
    width: 6
    value: 2
    doc_summary: This is a different parameter than the first.
    doc_verbose: |
      This field has extra verbose documentation surrounding it
      for reasons that might be clear later. The intent of these different fields
      is so that when a block interface uses a struct or enum in an interface
      definition, we can copy over the doc_summary and keep it inline, but for
      more information point to the package definition for the whole long-form
      documentation.

enums:
  - name: CYCLE_TYPE_E
    width: TRIPLE_NESTED_PARAM.value
    prefix: ""
    values:
      - name: IDLE
        doc_summary: The bus is idle this cycle.
      - name: VALID
        doc_summary: The command on the bus this is valid and there will be future VALID cycles for this transaction.
        doc_verbose: |
          The enum value is so complicated it needs its own
          verbose documentation that none of the other values in this enum need.
      - name: DONE
        doc_summary: The command on the bus this is valid and this is the last cycle of data.

    doc_summary: Indicates a command type of IDLE, VALID, or DONE.
    doc_verbose: |
      I'm writing this verbose documentation so that we have something to attempt to link in
      for cycle_type.
  - name: BOOL_E
    width: 1
    values:
      - name: "TRUE"
        doc_summary: This is true
        value: 1
      - name: "FALSE"
        doc_summary: This is false
        value: 0
    doc_summary: Test for an enum that is width 1
  - name: CONCISE_E
    width: 4
    values:
      - name: "SEQUENTIAL_THINGS"
        value: range(0, 10, 2)
        doc_summary: ThingX
      - name: "BEE"
        value: 3
        doc_summary: ThingX
    doc_summary: Write a lot of enums without much YIS

typedefs:
  - name: vanilla_type_t
    doc_summary: This is a basic logic type and width
    doc_verbose: And it has a doc_verbose for good measure
    base_type: "logic"
    width: ANOTHER_PARAM.value
  - name: nested_type_t
    doc_summary: Use another typedef as the base type, a localparam as the width
    base_type: vanilla_type_t
    width: 1
structs:
  - name: hero_write_t
    doc_summary: "A struct that wraps all fields needed for a single hero write."
    doc_verbose: |
      This is a verbose doc. I'm writing it to provide that my verbose
      doc links are working correctly.
    fields:
      - name: cycle_type
        type: CYCLE_TYPE_E
        doc_summary: type.doc_summary
        doc_verbose: type.doc_verbose
      - name: wdat
        type: logic
        width: HERO_WIDTH.value
        doc_summary: width.doc_summary
      - name: another_type_reference
        type: sub_def_t
        doc_summary: Test a struct of a struct
      - name: clk_en
        type: logic
        width: 1
        doc_summary: Clock enable for the bus

  - name: sub_def_t
    doc_summary: "A sub-struct of hero_write_t that is declared afterwards."
    fields:
      - name: subfield_a
        type: logic
        width: 1
        doc_summary: Test that a width-1 logic field generates correctly
      - name: subfield_b
        type: logic
        width: ANOTHER_PARAM.value
        doc_summary: width.doc_summary
      - name: subfield_c
        type: logic
        width: ANOTHER_PARAM.value
        doc_summary: width.doc_summary
      - name: subfield_d
        type: logic
        width: ANOTHER_PARAM.value
        doc_summary: width.doc_summary

